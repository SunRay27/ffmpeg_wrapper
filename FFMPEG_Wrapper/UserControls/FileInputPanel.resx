<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fileTable.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>