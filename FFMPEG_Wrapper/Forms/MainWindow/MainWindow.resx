<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>85</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>