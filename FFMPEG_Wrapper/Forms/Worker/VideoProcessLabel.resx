<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="OpenFolderPic.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAADaSURBVFhH7ZRbCsIwEEWzD12On/5Jd+S/IK7CjXQFLkNcgcQ75ipSUjuGGZJiD1xKOpPMgT5C
        dWKMV0UubLcHh2s5costPFzDHVlxmx3pbDU9t9nBg38h944Up0TAlKYEznwq7sisNHJOAqivkS6TLVvU
        YE+RgAwb48A2FegvF+DyjdwDN2TPW5Og11xAkO9a9btGn4uAIBInlkZBj5vAix3LWVC3ExgiPaDjMgvq
        i8AiMGMBXr9FcBXQYC9gicxKIxsT6JHh8/SKzHryKVCFJgQ2NcPX4m8J4QGYsu1/hpg8SwAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="openVideoPic.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFTSURBVFhH7ZcxTgMxFERXCh1Q0eQIHICSMi0lp6CgQ0IUUHEQmii5QloqOs7ABWgoIEJmxn8c
        EYJje+1tIE8aaeU/fzRFtPF2O2I450bQCXSeqYlW60HYIfQElXKliDoQdGN5vagvgZCpZXkmGXqEllCg
        rgQCZpbjnI62AtsceoPeuSNuNS4Hy30KkDYlsNi3AKkvgaWaAqSuBBZqCxCW+LBHz4XsaWBuUYCwRGAm
        exqabSevwDYUQ/5QARwf6TGJpXiaFuD8ARrrKAozRNMC4Uf3Cl1Cexpt4F3GIAUCz9CpxmvY2DNoAfIJ
        3cuywkaeQQvwrXcH7cuywk+NwQosoGONNjCLp3mBF+hMR1GYIZoW4B0w613gQ4x2BUpQDNkVKCrw/VL6
        8/5fqsBU8WlgrrmWx7hWfBqY+36YxGDWgeLzwEL4NPvtO6BEzIj+Wf13uu4Lnvn0SjJgcecAAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="statusPicture.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAbJJREFUWEft
        lr9Kw1AUxiPYNKalVLtU36KgdNVdQQdHfQfddNRn0M1/IKIFEUSkoNC0KnRwVBzEgh1EsDioIA71eG56
        vOamNyG2t0UhH3wQcs4930npr6kWKtS/FRS0Xigay2AZS+yabndPYOmLUIyC7ZK+QLe7Izg3hzD4lS/A
        rkvmIJU7L3zidUc4WV+jcmcFVmQEA+vNC+C9QmSY2jojAK0Hn/RCEk7GGvZQu3rhF29aHuww9lC7WsGl
        ZmJA9TvoaiMFM6NZ2zdbKecSFcTSoGPqJGCHvt3u5wvc7Qw4F1CPJUMMBzuxg/u9JF+gmkuKC6jGUobd
        w36CL/B4kBBqDSvC0gu72mGcL/B8FBdq5Do7S2Nakx92L8cxvsBbPtZUb7hNLP2wez8x+QIfp33SHtut
        YslQwgGVpoHkumXY4bNjWfi05D3k1rB0Y9eWcRaNDSYZdjKXV9JQXk1Lay7/DkuGkGSI4OvNn19Cdi3r
        ER0QS5+3nWCG3txkBuanMl4Yuh0MS2zMuw6qdJ5ivIUfVU1yUJWfKMZbYEUn8M/mLpSMnFKzmWfRcYoJ
        FeqvSNO+AGsvW6GzebL2AAAAAElFTkSuQmCC
</value>
  </data>
</root>